[
    - server i kapatmak icin [ ctrl + c ] yapiniz
    - herbir degisiklik yaptiktan sonra server i kapat-ac yapmamak icin [ nodemon ] u indir
    - config folder --> env folder --> config.env files [
        - config folder da projemizinin her taradinda erisilebilecek degiskenler alacak
        - (Port umuzu buradan alicaz)
        - json web token ve onun expile suresi gibi degiskenler environment dosyasinin (config.env) icerisinde olacak ve biz buna her taraftan erismeye calisacaz
        - bunlara ulasabilmek adina disaridan bir package ihtiyacimiz olacak 
        - bu package [ dotenv ] package i 

        - projemiz 5 katmandan olusacak = [
            1 - Helpers
            2 - Middlewares
            3 - Routes
            4 - Controllers
            5 - Models

            - ROUTES = herhangi bir url adresi girildiginde yani bir rout girildinginde projemiz ilk rout katmanina bakicak
              ornegin biz questions lar ile bir rout girdiysek mesela api/questions bu (ROUTES) rout islemini ilgili (CONTROLLER) a gondericek

            - CONTROLLERS = ornegin siz bir soru sormak istediniz, yani soru olusturmak istediniz, 
              buda (MODELS) icerisinde tanimladigimiz MondoDB ye gore bizim ( MODEL (MODELS)) imizi olusturucak ve database imize kayit edecek 

            - HELPERS =   yardimci function larimiz barin katmanimiz olucak. Ornegin biz disaridan baska Library (kutuphane) ler kullanmaya calisacaz
              ve bu Library lerin kullanimini daha kolaylastirmak icin bizim degisik function larimiz olabilir, bizde bunlara (HELPER FUNCTION) diyecegiz

            - MIDDLEWARES =   ara katmanlarimiz. Ornek verelim hemen; siz bir rout a ulsmak istiyorsunuz, bir baskasinin sorusunu guncellemek istiyorsunuz bu munkun degil
              bunu sadece kendi sahibi guncelleyebilir. Bunu engelleyebilmek icin (rout) (Controller) i calistirmadan hemen once ilgili (Middleware) function i calistirmaya caliscak
              porjemizde belirli kontrolleri yaptigimiz function lari barindiracak
        ]

      ]

    express (rout) larini ayarlama
    [
      - localhost:5000/api/questions || yazdigimizda sadece questions lar ile ilgili islemlerin yapilmasini sitiyoruz
      - localhost:5000/api/auth      || yazdigimizda sadece user kayit islemleri ve user in password unutma islemleri gibi islemlerini yapmasini istiyoruz      
    ]
    
    - [ ( ../ ) bir ust folder demek ]
    - mongodb atlas da olusturdugumuz server a [ connect your application ] secenegi (visual studio code ile) yaptigimiz proje ile girmek istiyor isek [
      
      -mongodb de verilen giris kodu (config) configuration dosyamizda yazicaz ki buna her taraftan erisebilelim.
    ]

    - mongodb+srv://MDeniz:<password>@cluster0.umnec7w.mongodb.net/?retryWrites=true&w=majority
    - mongodb+srv://MDeniz:<password>@cluster0.umnec7w.mongodb.net/question-answer?retryWrites=true&w=majority (question-answer) isimli bir database olusturduk 

    - [ npm install mongoose ] isimli bir package yukledik. Bu mongodb ye Conncetion icin gerekli olan bir package 

    - disaridan ekledigimiz package leri daha kolay kullanabilmek icin [ helper function ] lar yazicak
    - bu ( helper function ) lari depolamak icin ( helpers ) isimli bir folder olusturucaz
    - database islemleri icin helper folder in icerisine (database) isim li bir folder daha olusturucaz

    - (Models) isminde bir folder olustur. Bu klasor de (object) lerimiz ve onlarin tanimlari(definition) yer alicak
    - user lari mongoose schema larindan olusturucaz. Ornek olarak bakmak istersek mongoosejs.com adresine basvura biliriz

    - ornek reg ex email icin = [

        UserSchema.path('email').validate(function (email) {
        var emailRegex = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
        return emailRegex.test(email.text); // Assuming email has a text attribute
        }, 'The e-mail field cannot be empty.')
    ]
    - uygulamamizda sifre ye en az alti karakter dedik ama biz 5 karakter verdik ve uygulamamiz (application) patladi
    - hata olsa dahi (application crashed) olmasini istemiyor, ve kullanici hata yaptiginda sadece user bilgilensin istiyor isek [expressjs error-handling] de bulusalim :) 
    - ( error-handiling ) konusunda daha kapsamli bir bilgi edinmek icin [ https://expressjs.com/en/guide/error-handling.html ] adresine bakabilirsiniz
    - password hash lemek icin (bcryptjs) package ini kullan

    [
      ---- ENCODED ----

      jwt.sing function
      -json web token olusturmak icin kullanmamiz gereken function dur.
      
      - JWT (json web token) = jwt.sing(payload,secretOrPrivateKey,[options,callback]) 

      # PAYLOAD              = vermek istedigimiz data yer lar
      # secretOrPrivaviteKey = bizim belirledigimiz bir (secret yada private) key vardir
      # options              = algirithm (Default HS256) ve expiresIn (gecerli olducagi sureyi belirledigimiz yer 2d, 1h, 2m, 5s, 123ms, ect. gibi 
         eger 12 yazar isek bunu 12ms olarak alir. eger ["2 days"] yazarsak bunu ms (milisaniye cinsinde yazar. gerci tum yazdiklarimiz milisaniye cinsine gore calistiriyor))  

      - oturum kontrolleri yapmamiza yarar (ornegin bu kullanici oturum acmis mi? gibi)
      - authorizaton control
      - json web token i genelde browser in [ cookie ] lerinde depolayacagiz
      - ve bilirli bir sure icerisinde calisir ve o sureyi belirleyebiliriz

      - JWT nin ic yapisi ( HEADER, PAYLOAD, VERIFY SIGNATURE ) dan olusur      
      - HEADER da [ alg (algoritma) ve typ (type) ] vardir. algoritma sifreleme algoritmasidir. default olarak [ hs256 ] verilir. type ise [JWT] dir. 
      - PAYLOAD da ise DATA yani kullanmak istedigimiz bilgiler vardir. Bir Object tir. Ornegin name, id, etc.
      - VERIFY SIGNATURE da encoded ve decoded etmek icin bizim verdigimiz [ secret key ] i miz var.


      ---- DECODED ----

      jwt.verify function
      json web token decoded edmek icin gereken function dur
      
      -jwt.verify(token,secretOrPrivateKey,[options,callback])

      -jwt.verify(token, secretKey, function (err, decoded) {

        console.log(decoded.foo)
      });

      bir ornek olabilir
    ]
]
